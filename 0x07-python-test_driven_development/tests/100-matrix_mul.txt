Module: 100-matrix_mul
===========================

Using matrix_mul
---------------------------

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Raising Errors:

>>> matrix_mul((1, 2), [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([[1, 2], [3, 4]], "Hola")
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix_mul([(1, 2), (3, 4)], [(1, 2), (3, 4)])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [(1, 2), (3, 4)])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> matrix_mul([[]], [[3], [5, 6]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[1, "2"], [3, 4]], [[1, 2], ["3", 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [None, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [3]], [[1, 2], [3]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 2, 5], [3, 4, 6]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

Successful output:
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1], [2], [3]], [[4, 5, 6]])
[[4, 5, 6], [8, 10, 12], [12, 15, 18]]

